{"name": "test_wait", "status": "broken", "statusDetails": {"message": "TypeError: 'bool' object is not callable", "trace": "self = <test_wait.TestWait object at 0x000002055D5199F0>\n\n    def test_wait(self):\n        self.driver.find_element(By.ID, 'ember33').click()\n        self.driver.find_element(By.CSS_SELECTOR, \"[title~='原创精华文章,有100元奖金']\").click()\n        print(\"hello\")\n        \"\"\"\n        until(self, method, message='')\n        until方法需要传入一个method作为参数，method需要接受一个参数，所以wait_show也需要有一个参数\n        \"\"\"\n        # 方法1\n        def wait_show(x):\n            # 定位一组元素用find_elements，elements都是复数\n            return len(self.driver.find_elements(By.CSS_SELECTOR, \"[title~='招聘内推']\")) >= 1\n>       WebDriverWait(self.driver, 10).until(wait_show(1))\n\ntest_wait.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0bb6c6704baaa769fcd60998bc58c95c\")>\nmethod = True, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n>               value = method(self._driver)\nE               TypeError: 'bool' object is not callable\n\nC:\\Users\\yilin.yang\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\support\\wait.py:71: TypeError"}, "start": 1648712096513, "stop": 1648712097031, "uuid": "fe268d5d-a4f0-4a75-a1c3-4e02fdfb6dfa", "historyId": "b95c9ddf75c50bb477c4f705bb976f92", "testCaseId": "ca27799007501894fc9c9d427189d79c", "fullName": "test_pytest.test_wait.TestWait#test_wait", "labels": [{"name": "parentSuite", "value": "test_pytest"}, {"name": "suite", "value": "test_wait"}, {"name": "subSuite", "value": "TestWait"}, {"name": "host", "value": "IT-L-YANGYL"}, {"name": "thread", "value": "15652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest.test_wait"}]}