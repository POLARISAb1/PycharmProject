{"name": "test_add_error[Ca_add_012]", "status": "broken", "statusDetails": {"message": "TypeError: expected exception must be a BaseException type, not str", "trace": "self = <test_cal.TestCal object at 0x000002A861A6B9A0>, numa = '文', numb = 9.3\nconclusion = 'TypeError'\n\n    @pytest.mark.parametrize(\"numa,numb,conclusion\", get_errvalue(), ids=get_ekeys())\n    def test_add_error(self, numa, numb, conclusion):\n        print(numa, numb, conclusion)\n        # 定义一个对象calc\n        calc = Calculator()\n        # result 为实际结果\n>       with pytest.raises(str(conclusion)) as e:\nE       TypeError: expected exception must be a BaseException type, not str\n\ntest_cal.py:40: TypeError"}, "parameters": [{"name": "numa", "value": "'文'"}, {"name": "numb", "value": "9.3"}, {"name": "conclusion", "value": "'TypeError'"}], "start": 1648452891931, "stop": 1648452891932, "uuid": "e305e7d1-fc66-4aff-bd50-025a2fc8fa73", "historyId": "43ec30340d6cf91fb6059eb332dcac96", "testCaseId": "a3bfe621045782c9ea9a5de99829cd04", "fullName": "test_pytest.test_cal.TestCal#test_add_error", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('def_fixture')"}, {"name": "parentSuite", "value": "test_pytest"}, {"name": "suite", "value": "test_cal"}, {"name": "subSuite", "value": "TestCal"}, {"name": "host", "value": "IT-L-YANGYL"}, {"name": "thread", "value": "13784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest.test_cal"}]}