{"name": "test_add_error[Ca_add_012]", "status": "broken", "statusDetails": {"message": "TypeError: '>' not supported between instances of 'str' and 'int'", "trace": "self = <test_cal.TestCal object at 0x000002223E1DB280>, numa = '文', numb = 9.3\nconclusion = 'TypeError'\n\n    @pytest.mark.parametrize(\"numa,numb,conclusion\", get_errvalue(), ids=get_ekeys())\n    def test_add_error(self, numa, numb, conclusion):\n        print(numa, numb, conclusion, type(conclusion), eval(conclusion))\n        # 定义一个对象calc\n        calc = Calculator()\n        # eval：把字符串转化为相应对象\n>       jg = calc.add(numa, numb)\n\ntest_cal.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <func.calculator.Calculator object at 0x000002223E2A3130>, a = '文'\nb = 9.3\n\n    def add(self, a, b):\n        \"\"\"\n        相加方法\n        :param a:\n        :param b:\n        :return:\n        \"\"\"\n    \n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\n..\\func\\calculator.py:11: TypeError"}, "parameters": [{"name": "numa", "value": "'文'"}, {"name": "numb", "value": "9.3"}, {"name": "conclusion", "value": "'TypeError'"}], "start": 1648453580417, "stop": 1648453580418, "uuid": "9f645fd9-881a-4fa4-9e79-1a0d53d1391b", "historyId": "43ec30340d6cf91fb6059eb332dcac96", "testCaseId": "a3bfe621045782c9ea9a5de99829cd04", "fullName": "test_pytest.test_cal.TestCal#test_add_error", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('def_fixture')"}, {"name": "parentSuite", "value": "test_pytest"}, {"name": "suite", "value": "test_cal"}, {"name": "subSuite", "value": "TestCal"}, {"name": "host", "value": "IT-L-YANGYL"}, {"name": "thread", "value": "20736-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest.test_cal"}]}